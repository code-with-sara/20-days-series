# -*- coding: utf-8 -*-
"""day_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cycH4xBB7NgxHkeQtLLm86oovRPGk0Ux
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/drive/MyDrive/TutorialDataset/Mall_Customers.csv')

df.head()

#give information and description
df.info()

df.describe()

df.columns

df.shape

df.isnull().sum()

sns.countplot(x = 'Gender', data = df)
plt.title('Gender distribution')
plt.show()

sns.histplot(df['Age'], bins=20, kde=True)
plt.title('Age Distribution')
plt.show()

sns.histplot(df['Annual Income (k$)'], bins = 20, kde=True, color='orange')
plt.title('ANual Income distribution')
plt.show()

sns.histplot(df['Spending Score (1-100)'], kde = True, bins = 20, color = 'green')
plt.title('Spending Score Distribution')
plt.show()

plt.figure(figsize = (8, 5))
sns.scatterplot(x = 'Annual Income (k$)', y = 'Spending Score (1-100)', hue = 'Gender', data = df)
plt.title('Annual income vs spending score')
plt.show()

plt.figure(figsize=(6,4))
sns.heatmap(df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']].corr(), annot=True, cmap='coolwarm')
plt.title('Feature Correlation')
plt.show()

"""### Model Training"""

from sklearn.preprocessing import StandardScaler
X = df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

from sklearn.cluster import KMeans
kmeans=KMeans(n_clusters=5,random_state=42)
kmeans.fit(X_scaled)
df['Cluster']=kmeans.labels_

df.head()

"""### KMeans Clustering"""

import matplotlib.pyplot as plt

plt.scatter(df['Annual Income (k$)'], df['Spending Score (1-100)'], c=df['Cluster'], cmap='viridis')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.title('Customer Segments')
plt.show()

"""### DBSCAN Clustering"""

from sklearn.cluster import  DBSCAN
dbscan = DBSCAN(eps=0.5, min_samples=5)
df['DBSCAN_Cluster'] = dbscan.fit_predict(X_scaled)

plt.figure(figsize=(8, 5))
sns.scatterplot(x=df['Annual Income (k$)'], y=df['Spending Score (1-100)'],
                hue=df['DBSCAN_Cluster'], palette='Set1')
plt.title("DBSCAN Clustering")
plt.show()

df.head()

